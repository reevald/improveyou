# Generated by Django 4.2.3 on 2023-08-05 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("tasks", "__first__"),
        ("activities", "0002_urgecategory_alter_activity_table_recommendation"),
        ("items", "0002_event_reward"),
        ("users", "0002_dailycheckquestion_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid1,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("current_progress", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "task_id",
                    models.ForeignKey(
                        db_column="task_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.task",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_task_log",
            },
        ),
        migrations.CreateModel(
            name="RecommendationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid1,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prediction", models.FloatField(blank=True, null=True)),
                ("issue_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "recommendation_id",
                    models.ForeignKey(
                        db_column="recommendation_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activities.recommendation",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_recommendation_log",
            },
        ),
        migrations.CreateModel(
            name="EventReward",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid1,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rewards_claimed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event_id",
                    models.ForeignKey(
                        db_column="event_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="items.event",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_events_rewards",
                "unique_together": {("user_id", "event_id")},
            },
        ),
    ]
